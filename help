v-on -> to listen to an event (from html to vuejs)
"v-on:" can be replaced with a shorthand -> "@"

v-bind -> to bind (from vuejs to html)
"v-bind:" can be replaced with a shorthand -> ":"

v-model -> two way binding (from html to vuejs and vice-versa)

below, the keywords are el, data, methods...
new Vue({
    el: '#sampleid',
    data: {

    },
    methods: {

    },
    computed: {

    },
    watch: {

    },
    components: {

    },
    render: {

    }
})

´computed´: 
- the functions inside ´computed´ (or computed properties as they are called) gets called by itself, as the properties used inside changes. 
- They are calculations that will be cached based on their dependencies and will only update when needed.
- more optimal than ´watch´.
- need to run synchornously.

´watch´:
- can be used when computed is not possible.
- the property name of a watch must match one of the properties used inside the data field.
- this is another way to check if something changed on a data property and perform some action in response to that change.
- can also run asyncronously (so can use any async methods inside the logic)

`components` property in vue instance
- these are used to define local components instead of a single global component.
- for global component defenition, we can use Vue.component() method.

`render`:
- useful for adding a vuejs template (like rendering a App.vue file)


v-if -> this can be used to provide conditional expressions.
v-else -> is the else condition when the v-if condition is false.
v-else-if -> only available on higher version of vuejs
v-show -> similar to v-if, but useful when you don't want to detach the element (it would be hidden with css)
v-for -> for looping

´ref´ -> can be used to get some value from an html element.

npm install -g vue-cli
vue init webpack-simple my-first-app -> create a sample project using vue-cli
npm install -> to install all depens in package.json
npm run dev -> to run the app

(in case if npm run does nothing)
npm config get ignore-scripts -> if this is true, then run following,
npm config set ignore-scripts false

npm run build -> build in order to deploy the app in prod

´component´
- used for reusing components or parts.
- when you write a vue component, the data must be a function instead of just a property (this is to make sure state is different in each copy of component).
- el property doesn't work inside a component.
- the first arg of Vue.component() is tag name, 2nd arg is a vue instance.